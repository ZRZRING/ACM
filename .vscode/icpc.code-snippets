{
	"ICPC Temple": {
		"scope": "cpp",
		"prefix": "file",
		"body": [
			"#include <bits/stdc++.h>",
			"",
			"using i64 = long long;",
			"",
			"#define NO 2",
			"#define YES 1",
			"#define endl '\\n'",
			"#define lg(x) ((int)log10(x))",
			"#define log(x) ((int)log2(x))",
			"#define PII std::pair<i64, i64>",
			"#define abs(x) ((x) < 0 ? -(x) : (x))",
			"#define MOD(x) ((x) = ((x) % mod + mod) % mod)",
			"#define Fast_IOS std::ios::sync_with_stdio(false), std::cin.tie(0)",
			"#define debug(x) std::cerr << \"In Line \" << __LINE__ << \" the \" << #x << \" = \" << x << '\\n';",
			"",
			"const i64 mod = 998244353;",
			"",
			"int solve() {",
			"\t$0",
			"\treturn 0;",
			"}",
			"",
			"int main() {",
			"\tFast_IOS;",
			"\tint T = 1;",
			"\t// std::cin >> T;",
			"\twhile (T--) {",
			"\t\tint t = solve();",
			"\t\tif (t == 0) continue;",
			"\t\tif (t == YES) std::cout << \"YES\" << endl;",
			"\t\tif (t == NO) std::cout << \"NO\" << endl;",
			"\t}",
			"\treturn 0;",
			"}",
		],
		"description": "RMQ Temple"
	},

	"RMQ Temple": {
		"scope": "cpp",
		"prefix": "RMQ",
		"body": [
			"struct RMQ {",
			"\tint n;",
			"\t",
			"\tstd::vector<std::array<int, 30>> fmin, fmax;",
			"\t",
			"\tRMQ(std::vector<int> a) {",
			"\t\tn = a.size() - 1;",
			"\t\tfmin.resize(n + 1);",
			"\t\tfmax.resize(n + 1);",
			"\t\tfor (int i = 1; i <= n; i++) {",
			"\t\t\tfmin[i][0] = fmax[i][0] = a[i];",
			"\t\t}",
			"\t\tfor (int i = 1; i < 30; i++) {",
			"\t\t\tif (1 << i > n) break;",
			"\t\t\tfor (int j = 1; j + (1 << i) - 1 <= n; j++) {",
			"\t\t\t\tfmin[j][i] = std::min(fmin[j][i - 1], fmin[j + (1 << i - 1)][i - 1]);",
			"\t\t\t\tfmax[j][i] = std::max(fmax[j][i - 1], fmax[j + (1 << i - 1)][i - 1]);",
			"\t\t\t}",
			"\t\t}",
			"\t}",
			"\t",
			"\tint max(int l, int r) {",
			"\t\tint k = log(r - l + 1);",
			"\t\treturn std::max(fmax[l][k], fmax[r - (1 << k) + 1][k]);",
			"\t}",
			"\t",
			"\tint min(int l, int r) {",
			"\t\tint k = log(r - l + 1);",
			"\t\treturn std::min(fmin[l][k], fmin[r - (1 << k) + 1][k]);",
			"\t}",
			"};"
		],
		"description": "RMQ Temple"
	},
	"LCA Temple": {
        "scope": "cpp",
        "prefix": "LCA",
        "body": [
            "struct TREE {",
            "\tint n, flag = 0;",
            "",
            "\tstd::vector<std::vector<int>> e, fa;",
            "\t",
            "\tstd::vector<int> dep;",
            "\t",
            "\tTREE(int n) : n(n) {",
            "\t\te.resize(n);",
            "\t\tfa.resize(n);",
            "\t\tdep.resize(n);",
            "\t\tfor (int i = 0; i < n; i++) {",
            "\t\t\tfa[i].resize(21);",
            "\t\t}",
            "\t}",
            "",
            "\tvoid add(int u, int v) {",
            "\t\te[u].push_back(v);",
            "\t\te[v].push_back(u);",
            "\t}",
            "",
            "\tvoid dfs(int u, int last) {",
			"\t\tdep[u] = dep[last] + 1",
            "\t\tfor (int i = 1; i <= 20; i++) {",
            "\t\t\tif (!fa[u][i - 1]) break;",
            "\t\t\tfa[u][i] = fa[fa[u][i - 1]][i - 1];",
            "\t\t}",
            "\t\tfor (auto v : e[u]) {",
            "\t\t\tif (v == fa[u][0]) continue;",
            "\t\t\tfa[v][0] = u;",
            "\t\t\tdfs(v, u);",
            "\t\t}",
            "\t}",
            "",
            "\tint lca(int x, int y) {",
            "\t\tfor (int i = dep[x] - dep[y], j = 0; i > 0; i >>= 1, j++) {",
            "\t\t\tif (i & 1) x = fa[x][j];",
            "\t\t}",
            "\t\tfor (int i = dep[y] - dep[x], j = 0; i > 0; i >>= 1, j++) {",
            "\t\t\tif (i & 1) y = fa[y][j];",
            "\t\t}",
            "\t\tif (x != y) {",
            "\t\t\tfor (int i = 20; i >= 0; i--) {",
            "\t\t\t\tif (fa[x][i] == fa[y][i]) continue;",
            "\t\t\t\tx = fa[x][i];",
            "\t\t\t\ty = fa[y][i];",
            "\t\t\t}",
            "\t\t\tx = fa[x][0];",
            "\t\t}",
            "\t\treturn x;",
            "\t};",
            "};"
        ],
        "description": "LCA Temple"
    }
}